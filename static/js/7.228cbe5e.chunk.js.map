{"version":3,"sources":["Components/CustomCards.js","Pages/Product.js"],"names":["CustomCards","cardImage","cardTitle","cardDesc","cardType","cardPrice","itemLink","baseURL","className","style","height","to","src","alt","width","marginBottom","Product","pageCategory","useParams","useState","items","setItems","categories","setCategories","isLoading","setIsLoading","isLoadingCategory","setIsLoadingCategory","rangeValue","setRangeValue","showFilter","setShowFilter","storeId","useSelector","state","id","useEffect","category","fetch","process","then","res","ok","Error","json","data","catch","err","message","window","innerWidth","count","a","getCategories","value","getCategoriesData","selectedItems","filter","item","price","onClick","fontSize","cursor","map","onChange","e","target","type","min","max","step","image","title"],"mappings":"+GAAA,yBAyDeA,IArDK,SAAC,GAAgF,IAA9EC,EAA6E,EAA7EA,UAAWC,EAAkE,EAAlEA,UAAWC,EAAuD,EAAvDA,SAAUC,EAA6C,EAA7CA,SAAUC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAClF,OACI,sBAAKC,UAAS,4CAAoD,WAAbJ,EAAwB,MAAQ,OAASK,MAAO,CAAEC,OAAQ,QAA/G,UACI,sBAAKF,UAAU,cAAf,UACI,cAAC,IAAD,CAAMG,GAAE,WAAMJ,GAAd,SACI,qBACIK,IAAKX,EACLY,IAAI,aACJL,UAAU,wBACVC,MAAoB,WAAbL,EAAwB,CAAEU,MAAO,OAAQJ,OAAQ,QAASK,aAAc,QAAW,CAAEL,OAAQ,aAI3F,WAAbN,GACA,qBAAKI,UAAU,cAAf,SACI,sBAAMA,UAAU,0CAAhB,sBAMZ,sBAAKA,UAAU,uBAAf,UACkB,YAAbJ,GAA2B,qBAAKI,UAAU,iBAAf,SACxB,cAAC,WAAD,OAQW,aAAbJ,GAAwC,WAAbA,IAA0B,6BACnD,cAAC,IAAD,CAAMO,GAAIL,EAAV,SAAqBJ,MAEX,YAAbE,GAA0B,6BACvB,cAAC,IAAD,CAAMO,GAAIL,EAAV,SAAqBJ,UAGd,YAAbE,GAAuC,WAAbA,IAA0B,qBAAKI,UAAU,QAAf,SAClD,8BACI,sBAAMA,UAAU,OAAhB,eACA,+BAAOH,SAGdF,GAAY,qBAAKK,UAAU,OAAf,SACT,4BACKL,W,oIC8ENa,UAxHC,WACZ,IAAMC,EAAeC,cACrB,EAA0BC,qBAA1B,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAoCF,qBAApC,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAkCJ,mBAAS,QAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAkDN,mBAAS,QAA3D,mBAAOO,EAAP,KAA0BC,EAA1B,KACA,EAAoCR,mBAAS,KAA7C,mBAAOS,EAAP,KAAmBC,EAAnB,KACA,EAAoCV,qBAApC,mBAAOW,EAAP,KAAmBC,EAAnB,KACMC,EAAUC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,QAAQG,MAEnDC,qBAAU,WACNX,EAAa,WACb,IAEMY,EAAWpB,EAAaoB,SAC9BC,MAAM,GAAD,OAFOC,8CAEP,YAAYF,EAA2B,wBAAhB,cAAvB,YAAkEL,EAAlE,YAA8EK,GAHrE,KAITG,MAAK,SAAAC,GACF,IAAKA,EAAIC,GACL,MAAMC,MAAM,sBAEhB,OAAOF,EAAIG,UAEdJ,MAAK,SAAAK,GACFxB,EAASwB,GACTpB,EAAa,cAEhBqB,OAAM,SAAAC,GACHtB,EAAasB,EAAIC,cAE1B,CAAC/B,IAEJmB,qBAAU,WACNL,EAAckB,OAAOC,WAAa,OACnC,CAACD,SACJb,qBAAU,YACiB,uCAAG,WAAOe,GAAP,iBAAAC,EAAA,6DACtBzB,EAAqB,WADC,SAEF0B,YAAcF,GAFZ,cAEhBG,EAFgB,gBAGHA,EAAMV,OAHH,OAGhBC,EAHgB,OAItBlB,EAAqB,WACrBJ,EAAcsB,GALQ,2CAAH,sDAOvBU,CAAkB,KACnB,IACH,IAGMC,EAAiBpC,EAAQA,EAAMqC,QAAO,SAACC,GAAD,OAAUA,EAAKC,OAAS/B,KAAc,KAElF,MAAiB,YAAdJ,GAAiD,YAAtBE,EACnB,cAAC,IAAD,IAGO,YAAdF,GAAyC,YAAdA,GAAyC,SAAdA,EAC/C,8BAAMA,IAIb,yBAAShB,UAAU,qBAAqB2B,GAAG,WAA3C,SACI,sBAAK3B,UAAU,YAAf,UACI,qBAAKA,UAAU,iCAAf,SACI,oBAAIA,UAAU,kBAAd,SAAiCS,EAAaoB,SAAWpB,EAAaoB,SAAW,mBAErF,sBAAK7B,UAAU,MAAf,UACI,sBAAKA,UAAU,mCAAf,UACI,qBAAIA,UAAU,oDAAd,UACI,0CACA,qBAAKA,UAAU,6CAA6CoD,QAAS,kBAAM7B,GAAc,SAAAuB,GAAK,OAAKA,MAAQ7C,MAAO,CAACoD,SAAU,SAAUC,OAAQ,WAA/I,SAA4JhC,EAAa,OAAS,YAEtL,sBAAKtB,UAAS,eAAWsB,EAAwB,GAAX,UAAtC,UACI,gCACI,2CAEJ,oBAAItB,UAAU,aAAd,SACKc,EAAaA,EAAWyC,KAAI,SAAA1B,GAAQ,OACjC,oBAAI7B,UAAU,kBAAd,SACI,cAAC,IAAD,CACIG,GAAE,WAAMqB,EAAN,6BAAkCK,EAASA,UADjD,SAC8DA,EAASA,YAFtCA,EAASF,OAI7C,cAAC,IAAD,SAGb,sBAAK3B,UAAYsB,EAAwB,GAAX,SAA9B,UACI,+BACI,sBAAKtB,UAAU,aAAf,UACI,gCACI,wCAEJ,uBACIwD,SA7Cd,SAACC,GACnBpC,EAAcoC,EAAEC,OAAOZ,QA6CSa,KAAK,QACLC,IAAI,KACJC,IAAI,OACJC,KAAK,KACL9D,UAAU,qBACV8C,MAAO1B,SAInB,sBAAKpB,UAAU,iCAAf,UACI,sCAASoB,KACT,mDAIZ,qBAAKpB,UAAU,WAAf,SACI,qBAAKA,UAAU,WAAf,SACmB,YAAdgB,EAA0BgC,EAAcO,KAAI,SAACL,GAAD,OACzC,qBAAKlD,UAAU,uBAAf,SACI,cAAC,IAAD,CAA2BD,QAAO,UAAKyB,EAAL,oBAAwB0B,EAAKvB,IAAMlC,UAAWyD,EAAKa,MAAOjE,SAAQ,WAAM0B,EAAN,oBAAyB0B,EAAKvB,IAAMjC,UAAWwD,EAAKc,MAAOpE,SAAU,UAAWC,UAAWqD,EAAKC,OAAlLD,EAAKvB,SAE1B,cAAC,IAAD","file":"static/js/7.228cbe5e.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Fragment } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CustomCards = ({ cardImage, cardTitle, cardDesc, cardType, cardPrice, itemLink, baseURL }) => {\r\n    return (\r\n        <div className={`single_product shadow text-center ${cardType === 'Latest' ? 'p-4' : 'p-3'}`} style={{ height: \"100%\" }}>\r\n            <div className=\"product_img\">\r\n                <Link to={`/${baseURL}`}>\r\n                    <img\r\n                        src={cardImage}\r\n                        alt=\"Card Image\"\r\n                        className=\"img img-fluid rounded\"\r\n                        style={cardType === 'Latest' ? { width: '100%', height: '400px', marginBottom: '10px' } : { height: \"300px\" }}\r\n                    />\r\n                </Link>\r\n                {\r\n                    cardType === 'Latest' &&\r\n                    <div className=\"new_product\">\r\n                        <span className=\"badge py-2 px-3 badge-pill badge-danger\">\r\n                            New\r\n                        </span>\r\n                    </div>\r\n                }\r\n            </div>\r\n            <div className=\"product_caption my-3\">\r\n                {cardType === 'Product' && (<div className='product-rating'>\r\n                    <Fragment>\r\n                        {/* <i className={props.stars[0]}></i>\r\n                            <i className={props.stars[1]}></i>\r\n                            <i className={props.stars[2]}></i>\r\n                            <i className={props.stars[3]}></i>\r\n                            <i className={props.stars[4]}></i> */}\r\n                    </Fragment>\r\n                </div>)}\r\n                {(cardType === 'Category' || cardType === 'Latest') && <h4>\r\n                    <Link to={itemLink}>{cardTitle}</Link>\r\n                </h4>}\r\n                {cardType === 'Product' && <h5>\r\n                    <Link to={itemLink}>{cardTitle}</Link>\r\n                </h5>}\r\n            </div>\r\n            {(cardType === 'Product' || cardType === 'Latest') && <div className=\"price\">\r\n                <b>\r\n                    <span className=\"mr-1\">$</span>\r\n                    <span>{cardPrice}</span>\r\n                </b>\r\n            </div>}\r\n            {cardDesc && <div className=\"mt-3\">\r\n                <p>\r\n                    {cardDesc}\r\n                </p>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomCards","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getCategories } from \"../API/api\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"../Components/Loader\";\r\nimport { useSelector } from \"react-redux\";\r\nimport CustomCards from \"../Components/CustomCards\";\r\n\r\nconst Product = () => {\r\n    const pageCategory = useParams();\r\n    const [items, setItems] = useState();\r\n    const [categories, setCategories] = useState();\r\n    const [isLoading, setIsLoading] = useState('idle');\r\n    const [isLoadingCategory, setIsLoadingCategory] = useState('idle');\r\n    const [rangeValue, setRangeValue] = useState(500);\r\n    const [showFilter, setShowFilter] = useState();\r\n    const storeId = useSelector(state => state.storeId.id);\r\n\r\n    useEffect(() => {\r\n        setIsLoading('loading');\r\n        const count = 50;\r\n        const url = process.env.REACT_APP_BACKEND_URL;\r\n        const category = pageCategory.category;\r\n        fetch(`${url}/${!category ? 'getProducts' : 'getProductsByCategory'}/${storeId}/${!category ? count : category}`)\r\n            .then(res => {\r\n                if (!res.ok) {\r\n                    throw Error(\"Products not Found\");\r\n                }\r\n                return res.json();\r\n            })\r\n            .then(data => {\r\n                setItems(data);\r\n                setIsLoading('success');\r\n            })\r\n            .catch(err => {\r\n                setIsLoading(err.message)\r\n            })\r\n    }, [pageCategory])\r\n\r\n    useEffect(() => {\r\n        setShowFilter(window.innerWidth > 600 ? true : false);\r\n    }, [window])\r\n    useEffect(() => {\r\n        const getCategoriesData = async (count) => {\r\n            setIsLoadingCategory('loading');\r\n            const value = await getCategories(count);\r\n            const data = await value.json();\r\n            setIsLoadingCategory('success')\r\n            setCategories(data);\r\n        }\r\n        getCategoriesData(4);\r\n    }, [])\r\n    const changeHandler = (e) => {\r\n        setRangeValue(e.target.value);\r\n    };\r\n    const selectedItems = (items ? items.filter((item) => item.price <= rangeValue) : null);\r\n    \r\n    if(isLoading === \"loading\" && isLoadingCategory === \"loading\") {\r\n        return <Loader />\r\n    }\r\n\r\n    if (isLoading !== 'success' && isLoading !== 'loading' && isLoading !== 'idle') {\r\n        return <div>{isLoading}</div>\r\n    }\r\n\r\n    return (\r\n        <section className=\"products py-5 my 5\" id=\"products\">\r\n            <div className=\"container\">\r\n                <div className=\"section_title text-center mb-5\">\r\n                    <h1 className=\"text-capitalize\">{pageCategory.category ? pageCategory.category : \"All Products\"}</h1>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-3 border-right mb-small-5\">\r\n                        <h4 className=\"mb-5 border-bottom d-flex justify-content-between\">\r\n                            <div>Filters</div>\r\n                            <div className=\"bg bg-secondary m-1 p-1 rounded text-white\" onClick={() => setShowFilter(value => !value)} style={{fontSize: \"0.9rem\", cursor: \"pointer\"}}>{showFilter ? 'Hide' : 'Show'}</div>\r\n                        </h4>\r\n                        <div className={`mb-5 ${!showFilter ? 'd-none' : ''}`}>\r\n                            <label>\r\n                                <b>Category</b>\r\n                            </label>\r\n                            <ul className=\"list-group\">\r\n                                {categories ? categories.map(category => (\r\n                                    <li className=\"list-group-item\" key={category.id}>\r\n                                        <Link\r\n                                            to={`/${storeId}/product/category/${category.category}`}>{category.category}</Link>\r\n                                    </li>\r\n                                )) : <Loader/>}\r\n                            </ul>\r\n                        </div>\r\n                        <div className={!showFilter ? 'd-none' : ''}>\r\n                            <form>\r\n                                <div className=\"form-group\">\r\n                                    <label>\r\n                                        <b>Price</b>\r\n                                    </label>\r\n                                    <input\r\n                                        onChange={changeHandler}\r\n                                        type=\"range\"\r\n                                        min=\"50\"\r\n                                        max=\"1000\"\r\n                                        step=\"50\"\r\n                                        className=\"form-control-range\"\r\n                                        value={rangeValue}\r\n                                    />\r\n                                </div>\r\n                            </form>\r\n                            <div className=\"d-flex justify-content-between\">\r\n                                <label>${rangeValue}</label>\r\n                                <label>$1000</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-9\">\r\n                        <div className=\"row mb-5\">\r\n                            {isLoading === 'success' ? selectedItems.map((item) => (\r\n                                <div className=\"col-md-4 col-12 mb-4\">\r\n                                    <CustomCards key={item.id} baseURL={`${storeId}/product/${item.id}`} cardImage={item.image} itemLink={`/${storeId}/product/${item.id}`} cardTitle={item.title} cardType={'Product'} cardPrice={item.price} />\r\n                                </div>\r\n                            )) : <Loader />}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Product;\r\n"],"sourceRoot":""}