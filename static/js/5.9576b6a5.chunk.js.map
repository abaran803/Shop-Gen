{"version":3,"sources":["Components/CustomCards.js","../node_modules/@mui/material/CardMedia/cardMediaClasses.js","../node_modules/@mui/material/CardMedia/CardMedia.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","../node_modules/@mui/material/CardActions/cardActionsClasses.js","../node_modules/@mui/material/CardActions/CardActions.js","Pages/Category.js"],"names":["CustomCardsMaterial","cardImage","cardTitle","cardDesc","cardPrice","cardType","baseURL","itemLink","sx","display","flexDirection","height","component","image","alt","borderBottom","minHeight","transform","gutterBottom","fontWeight","fontSize","lineHeight","substring","length","variant","color","to","size","getCardMediaUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardMediaRoot","styled","name","overridesResolver","props","styles","ownerState","isMediaComponent","isImageComponent","root","media","img","_extends","backgroundSize","backgroundRepeat","backgroundPosition","width","objectFit","MEDIA_COMPONENTS","IMAGE_COMPONENTS","CardMedia","React","inProps","ref","useThemeProps","children","className","src","style","other","_objectWithoutPropertiesLoose","indexOf","composedStyle","backgroundImage","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","as","role","undefined","getCardContentUtilityClass","CardContentRoot","padding","paddingBottom","CardContent","getCardActionsUtilityClass","CardActionsRoot","disableSpacing","spacing","alignItems","marginLeft","CardActions","Category","storeId","useSelector","state","id","useState","categories","setCategories","isLoading","setIsLoading","useEffect","fetch","process","then","res","ok","Error","json","data","catch","err","message","console","log","map","category","description"],"mappings":"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","file":"static/js/5.9576b6a5.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Fragment } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport { CardMedia } from '@mui/material';\r\n\r\nconst CustomCards = ({ cardImage, cardTitle, cardDesc, cardType, cardPrice, itemLink, baseURL }) => {\r\n    return (\r\n        <div className={`single_product shadow text-center ${cardType === 'Latest' ? 'p-4' : 'p-3'}`} style={{ height: \"100%\" }}>\r\n            <div className=\"product_img\">\r\n                <Link to={`/${baseURL}`}>\r\n                    <img\r\n                        src={cardImage}\r\n                        alt=\"Card Image\"\r\n                        className=\"img img-fluid rounded\"\r\n                        style={cardType === 'Latest' ? { width: '100%', height: '400px', marginBottom: '10px' } : { height: \"300px\" }}\r\n                    />\r\n                </Link>\r\n                {\r\n                    cardType === 'Latest' &&\r\n                    <div className=\"new_product\">\r\n                        <span className=\"badge py-2 px-3 badge-pill badge-danger\">\r\n                            New\r\n                        </span>\r\n                    </div>\r\n                }\r\n            </div>\r\n            <div className=\"product_caption my-3\">\r\n                {cardType === 'Product' && (<div className='product-rating'>\r\n                    <Fragment>\r\n                        {/* <i className={props.stars[0]}></i>\r\n                            <i className={props.stars[1]}></i>\r\n                            <i className={props.stars[2]}></i>\r\n                            <i className={props.stars[3]}></i>\r\n                            <i className={props.stars[4]}></i> */}\r\n                    </Fragment>\r\n                </div>)}\r\n                {(cardType === 'Category' || cardType === 'Latest') && <h4>\r\n                    <Link to={itemLink}>{cardTitle}</Link>\r\n                </h4>}\r\n                {cardType === 'Product' && <h5>\r\n                    <Link to={itemLink}>{cardTitle}</Link>\r\n                </h5>}\r\n            </div>\r\n            {(cardType === 'Product' || cardType === 'Latest') && <div className=\"price\">\r\n                <b>\r\n                    <span className=\"mr-1\">$</span>\r\n                    <span>{cardPrice}</span>\r\n                </b>\r\n            </div>}\r\n            {cardDesc && <div className=\"mt-3\">\r\n                <p>\r\n                    {cardDesc}\r\n                </p>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst CustomCardsMaterial = ({ cardImage, cardTitle, cardDesc, cardType, cardPrice, itemLink, baseURL }) => {\r\n    return (\r\n        <Card sx={{ display: 'flex', flexDirection: 'column', height: '100%' }}>\r\n            <CardMedia\r\n                component=\"img\"\r\n                height=\"140\"\r\n                image={cardImage}\r\n                alt=\"green iguana\"\r\n                sx={{ borderBottom: '1px solid grey', minHeight: '280px', transform: 'scale(0.9)' }}\r\n            />\r\n            <CardContent sx={{height: '100%'}}>\r\n                <Typography gutterBottom component=\"div\" sx={{fontWeight: '600', fontSize: '1.5rem', lineHeight: '1.2'}}>\r\n                    {cardTitle.substring(0, 28) + ((cardTitle.length > 15) ? '...' : '')}\r\n                </Typography>\r\n                {cardDesc && <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    {cardDesc}\r\n                </Typography>}\r\n            </CardContent>\r\n            {cardPrice && <CardActions>\r\n                <Link to={`/${baseURL}`}>\r\n                    <Button size=\"small\">Visit</Button>\r\n                </Link>\r\n                <Button size=\"small\" sx={{color: 'black'}}>Price: {cardPrice}$</Button>\r\n            </CardActions>}\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default CustomCardsMaterial","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCardMediaUtilityClass(slot) {\n  return generateUtilityClass('MuiCardMedia', slot);\n}\nconst cardMediaClasses = generateUtilityClasses('MuiCardMedia', ['root', 'media', 'img']);\nexport default cardMediaClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"image\", \"src\", \"style\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCardMediaUtilityClass } from './cardMediaClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    isMediaComponent,\n    isImageComponent\n  } = ownerState;\n  const slots = {\n    root: ['root', isMediaComponent && 'media', isImageComponent && 'img']\n  };\n  return composeClasses(slots, getCardMediaUtilityClass, classes);\n};\n\nconst CardMediaRoot = styled('div', {\n  name: 'MuiCardMedia',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      isMediaComponent,\n      isImageComponent\n    } = ownerState;\n    return [styles.root, isMediaComponent && styles.media, isImageComponent && styles.img];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'block',\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat',\n  backgroundPosition: 'center'\n}, ownerState.isMediaComponent && {\n  width: '100%'\n}, ownerState.isImageComponent && {\n  // ⚠️ object-fit is not supported by IE11.\n  objectFit: 'cover'\n}));\nconst MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nconst IMAGE_COMPONENTS = ['picture', 'img'];\nconst CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardMedia'\n  });\n\n  const {\n    children,\n    className,\n    component = 'div',\n    image,\n    src,\n    style\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const isMediaComponent = MEDIA_COMPONENTS.indexOf(component) !== -1;\n  const composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: `url(\"${image}\")`\n  }, style) : style;\n\n  const ownerState = _extends({}, props, {\n    component,\n    isMediaComponent,\n    isImageComponent: IMAGE_COMPONENTS.indexOf(component) !== -1\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardMediaRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    role: !isMediaComponent && image ? 'img' : undefined,\n    ref: ref,\n    style: composedStyle,\n    ownerState: ownerState,\n    src: isMediaComponent ? image || src : undefined\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('MUI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardMedia;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\n\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n\n  const {\n    className,\n    component = 'div'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCardActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActions', slot);\n}\nconst cardActionsClasses = generateUtilityClasses('MuiCardActions', ['root', 'spacing']);\nexport default cardActionsClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"disableSpacing\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardActionsUtilityClass } from './cardActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableSpacing\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getCardActionsUtilityClass, classes);\n};\n\nconst CardActionsRoot = styled('div', {\n  name: 'MuiCardActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8\n}, !ownerState.disableSpacing && {\n  '& > :not(:first-of-type)': {\n    marginLeft: 8\n  }\n}));\nconst CardActions = /*#__PURE__*/React.forwardRef(function CardActions(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardActions'\n  });\n\n  const {\n    disableSpacing = false,\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    disableSpacing\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardActions;","import { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CustomCards from \"../Components/CustomCards\";\r\nimport Loader from \"../Components/Loader\";\r\n\r\nconst Category = () => {\r\n\r\n    const storeId = useSelector(state => state.storeId.id);\r\n    const [categories, setCategories] = useState();\r\n    const [isLoading, setIsLoading] = useState('idle');\r\n\r\n    useEffect(() => {\r\n        setIsLoading('loading');\r\n        const count = 4;\r\n        const url = process.env.REACT_APP_BACKEND_URL;\r\n        fetch(`${url}/getCategories/${storeId}/${count}`)\r\n            .then(res => {\r\n                if(!res.ok) {\r\n                    throw Error(\"Categories not Found\");\r\n                }\r\n                return res.json();\r\n            })\r\n            .then(data => {\r\n                setCategories(data.data);\r\n                setIsLoading('success');\r\n            })\r\n            .catch(err => {\r\n                setIsLoading(err.message)\r\n            })\r\n    }, [])\r\n\r\n    if(isLoading === 'loading' || isLoading === 'idle') {\r\n        return <Loader />\r\n    }\r\n\r\n    if(isLoading !== 'success') {\r\n        return <div>{isLoading}</div>\r\n    }\r\n\r\n    console.log(categories);\r\n\r\n    return (\r\n        <div className=\"product py-5 bg-light\" id=\"products\">\r\n            <div className=\"container\">\r\n                <div className=\"section_title text-center mb-5\">\r\n                    <h1 className=\"text-capitalize\">Categories</h1>\r\n                </div>\r\n                <div className=\"row mb-5\">\r\n                    {categories ? categories.map((category => (\r\n                        <div className=\"col-md-4 mb-4 col-12\" key={category.id}>\r\n                            <CustomCards cardImage={category.image} cardTitle={category.category} cardDesc={category.description} cardType={'Category'} itemLink={`/${storeId}/product/category/${category.category}`} baseURL={`${storeId}/product/category/${category.category}`} key={category.id} />\r\n                        </div>\r\n                    ))) : <h2 className='w-100 text text-center mt-5'>No data found</h2>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Category;"],"sourceRoot":""}