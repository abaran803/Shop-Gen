{"version":3,"sources":["Components/CustomCards.js","Components/CustomFilter.js","Pages/Product.js"],"names":["CustomCardsMaterial","cardImage","cardTitle","cardDesc","cardPrice","cardType","baseURL","itemLink","sx","display","flexDirection","height","component","image","alt","borderBottom","minHeight","transform","gutterBottom","fontWeight","fontSize","lineHeight","substring","length","variant","color","to","size","CustomFilterMaterial","setShowFilter","showFilter","categories","storeId","rangeValue","changeHandler","Fragment","className","Typography","onClick","value","style","cursor","TableContainer","Paper","Table","TableBody","map","category","id","TableRow","border","TableCell","Product","pageCategory","useParams","useState","items","setItems","setCategories","isLoading","setIsLoading","isLoadingCategory","setIsLoadingCategory","setRangeValue","useSelector","state","useEffect","fetch","process","then","res","ok","Error","json","data","catch","err","message","window","innerWidth","count","a","getCategories","getCategoriesData","selectedItems","filter","item","price","Loader","e","target","CustomCards","title"],"mappings":"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","file":"static/js/8.c24ff7c9.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Fragment } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport { CardMedia } from '@mui/material';\r\n\r\nconst CustomCards = ({ cardImage, cardTitle, cardDesc, cardType, cardPrice, itemLink, baseURL }) => {\r\n    return (\r\n        <div className={`single_product shadow text-center ${cardType === 'Latest' ? 'p-4' : 'p-3'}`} style={{ height: \"100%\" }}>\r\n            <div className=\"product_img\">\r\n                <Link to={`/${baseURL}`}>\r\n                    <img\r\n                        src={cardImage}\r\n                        alt=\"Card Image\"\r\n                        className=\"img img-fluid rounded\"\r\n                        style={cardType === 'Latest' ? { width: '100%', height: '400px', marginBottom: '10px' } : { height: \"300px\" }}\r\n                    />\r\n                </Link>\r\n                {\r\n                    cardType === 'Latest' &&\r\n                    <div className=\"new_product\">\r\n                        <span className=\"badge py-2 px-3 badge-pill badge-danger\">\r\n                            New\r\n                        </span>\r\n                    </div>\r\n                }\r\n            </div>\r\n            <div className=\"product_caption my-3\">\r\n                {cardType === 'Product' && (<div className='product-rating'>\r\n                    <Fragment>\r\n                        {/* <i className={props.stars[0]}></i>\r\n                            <i className={props.stars[1]}></i>\r\n                            <i className={props.stars[2]}></i>\r\n                            <i className={props.stars[3]}></i>\r\n                            <i className={props.stars[4]}></i> */}\r\n                    </Fragment>\r\n                </div>)}\r\n                {(cardType === 'Category' || cardType === 'Latest') && <h4>\r\n                    <Link to={itemLink}>{cardTitle}</Link>\r\n                </h4>}\r\n                {cardType === 'Product' && <h5>\r\n                    <Link to={itemLink}>{cardTitle}</Link>\r\n                </h5>}\r\n            </div>\r\n            {(cardType === 'Product' || cardType === 'Latest') && <div className=\"price\">\r\n                <b>\r\n                    <span className=\"mr-1\">$</span>\r\n                    <span>{cardPrice}</span>\r\n                </b>\r\n            </div>}\r\n            {cardDesc && <div className=\"mt-3\">\r\n                <p>\r\n                    {cardDesc}\r\n                </p>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst CustomCardsMaterial = ({ cardImage, cardTitle, cardDesc, cardType, cardPrice, itemLink, baseURL }) => {\r\n    return (\r\n        <Card sx={{ display: 'flex', flexDirection: 'column', height: '100%' }}>\r\n            <CardMedia\r\n                component=\"img\"\r\n                height=\"140\"\r\n                image={cardImage}\r\n                alt=\"green iguana\"\r\n                sx={{ borderBottom: '1px solid grey', minHeight: '280px', transform: 'scale(0.9)' }}\r\n            />\r\n            <CardContent sx={{height: '100%'}}>\r\n                <Typography gutterBottom component=\"div\" sx={{fontWeight: '600', fontSize: '1.5rem', lineHeight: '1.2'}}>\r\n                    {cardTitle.substring(0, 28) + ((cardTitle.length > 15) ? '...' : '')}\r\n                </Typography>\r\n                {cardDesc && <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    {cardDesc}\r\n                </Typography>}\r\n            </CardContent>\r\n            {cardPrice && <CardActions>\r\n                <Link to={`/${baseURL}`}>\r\n                    <Button size=\"small\">Visit</Button>\r\n                </Link>\r\n                <Button size=\"small\" sx={{color: 'black'}}>Price: {cardPrice}$</Button>\r\n            </CardActions>}\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default CustomCardsMaterial","import { List, ListItem, ListItemButton, ListItemIcon, ListItemText, Paper, Table, TableBody, TableCell, TableContainer, TableRow, Typography } from '@mui/material'\r\nimport { Box } from '@mui/system'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Loader from './Loader'\r\n\r\nconst CustomFilter = ({ setShowFilter, showFilter, categories, storeId, rangeValue, changeHandler }) => {\r\n    return (\r\n        <React.Fragment>\r\n            <h4 className=\"mb-5 border-bottom d-flex justify-content-between\">\r\n                <div>Filters</div>\r\n                <div className=\"bg bg-secondary m-1 p-1 rounded text-white\" onClick={() => setShowFilter(value => !value)} style={{ fontSize: \"0.9rem\", cursor: \"pointer\" }}>{showFilter ? 'Hide' : 'Show'}</div>\r\n            </h4>\r\n            <div className={`mb-5 ${!showFilter ? 'd-none' : ''}`}>\r\n                <label>\r\n                    <b>Category</b>\r\n                </label>\r\n                <ul className=\"list-group\">\r\n                    {categories ? categories.map((category, index) => (\r\n                        <li className=\"list-group-item\" key={index}>\r\n                            <Link\r\n                                to={`/${storeId}/product/category/${category.category}`}>{category.category}</Link>\r\n                        </li>\r\n                    )) : <Loader />}\r\n                </ul>\r\n            </div>\r\n            <div className={!showFilter ? 'd-none' : ''}>\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                        <label>\r\n                            <b>Price</b>\r\n                        </label>\r\n                        <input\r\n                            onChange={changeHandler}\r\n                            type=\"range\"\r\n                            min=\"50\"\r\n                            max=\"1000\"\r\n                            step=\"50\"\r\n                            className=\"form-control-range\"\r\n                            value={rangeValue}\r\n                        />\r\n                    </div>\r\n                </form>\r\n                <div className=\"d-flex justify-content-between\">\r\n                    <label>${rangeValue}</label>\r\n                    <label>$1000</label>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nconst CustomFilterMaterial = ({ setShowFilter, showFilter, categories, storeId, rangeValue, changeHandler }) => {\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"mb-5 border-bottom d-flex justify-content-between\">\r\n                <Typography variant='h4'>Filters</Typography>\r\n                <div className=\"bg bg-secondary m-1 p-1 rounded text-white d-flex align-items-center\" onClick={() => setShowFilter(value => !value)} style={{ fontSize: \"0.9rem\", cursor: \"pointer\" }}>{showFilter ? 'Hide' : 'Show'}</div>\r\n            </div>\r\n            <div className={`mb-5 ${!showFilter ? 'd-none' : ''}`}>\r\n                <label>\r\n                    <Typography variant='h5'>Category</Typography>\r\n                </label>\r\n                {categories && <TableContainer component={Paper}>\r\n                    <Table aria-label=\"simple table\">\r\n                        <TableBody>\r\n                            {categories.map((category, id) => (\r\n                                <TableRow\r\n                                    key={id}\r\n                                    sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                                >\r\n                                    <TableCell sx={{ fontSize: '1.1rem' }}>\r\n                                        <Link to={`/${storeId}/product/category/${category.category}`}>\r\n                                            {category.category}\r\n                                        </Link>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>}\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default CustomFilterMaterial","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getCategories } from \"../API/api\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"../Components/Loader\";\r\nimport { useSelector } from \"react-redux\";\r\nimport CustomCards from \"../Components/CustomCards\";\r\nimport CustomFilter from \"../Components/CustomFilter\";\r\n\r\nconst Product = () => {\r\n    const pageCategory = useParams();\r\n    const [items, setItems] = useState();\r\n    const [categories, setCategories] = useState();\r\n    const [isLoading, setIsLoading] = useState('idle');\r\n    const [isLoadingCategory, setIsLoadingCategory] = useState('idle');\r\n    const [rangeValue, setRangeValue] = useState(500);\r\n    const [showFilter, setShowFilter] = useState();\r\n    const storeId = useSelector(state => state.storeId.id);\r\n\r\n    useEffect(() => {\r\n        setIsLoading('loading');\r\n        const count = 50;\r\n        const url = process.env.REACT_APP_BACKEND_URL;\r\n        const category = pageCategory.category;\r\n        fetch(`${url}/${!category ? 'getProducts' : 'getProductsByCategory'}/${storeId}/${!category ? count : category}`)\r\n            .then(res => {\r\n                if (!res.ok) {\r\n                    throw Error(\"Products not Found\");\r\n                }\r\n                return res.json();\r\n            })\r\n            .then(data => {\r\n                setItems(data.data);\r\n                setIsLoading('success');\r\n            })\r\n            .catch(err => {\r\n                setIsLoading(err.message)\r\n            })\r\n    }, [pageCategory])\r\n\r\n    useEffect(() => {\r\n        setShowFilter(window.innerWidth > 600 ? true : false);\r\n    }, [window])\r\n    useEffect(() => {\r\n        const getCategoriesData = async (count) => {\r\n            setIsLoadingCategory('loading');\r\n            const data = await getCategories(count, storeId);\r\n            setIsLoadingCategory('success')\r\n            setCategories(data);\r\n        }\r\n        getCategoriesData(4);\r\n    }, [])\r\n    const changeHandler = (e) => {\r\n        setRangeValue(e.target.value);\r\n    };\r\n    const selectedItems = (items ? items.filter((item) => item.price <= rangeValue) : null);\r\n    \r\n    if(isLoading === \"loading\" && isLoadingCategory === \"loading\") {\r\n        return <Loader />\r\n    }\r\n\r\n    if (isLoading !== 'success' && isLoading !== 'loading' && isLoading !== 'idle') {\r\n        return <div>{isLoading}</div>\r\n    }\r\n\r\n    return (\r\n        <section className=\"products py-5 my 5\" id=\"products\">\r\n            <div className=\"container\">\r\n                <div className=\"section_title text-center mb-5\">\r\n                    <h1 className=\"text-capitalize\">{pageCategory.category ? pageCategory.category : \"All Products\"}</h1>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-3 border-right mb-small-5\">\r\n                        <CustomFilter showFilter={showFilter} setShowFilter={setShowFilter} categories={categories} storeId={storeId} rangeValue={rangeValue} changeHandler={changeHandler} />\r\n                    </div>\r\n                    <div className=\"col-md-9\">\r\n                        <div className=\"row mb-5\">\r\n                            {isLoading === 'success' ? selectedItems.map((item) => (\r\n                                <div className=\"col-md-4 col-12 mb-4\" key={item.id}>\r\n                                    <CustomCards baseURL={`${storeId}/product/${item.id}`} cardImage={item.image} itemLink={`/${storeId}/product/${item.id}`} cardTitle={item.title} cardType={'Product'} cardPrice={item.price} />\r\n                                </div>\r\n                            )) : <Loader />}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Product;\r\n"],"sourceRoot":""}